generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Kullanıcılar (müşteriler)
model User {
  id         String       @id @default(uuid()) // UUID primary key
  name       String
  surname    String?
  email      String       @unique
  phone      String?      @unique
  qrCode     String       @unique
  createdAt  DateTime     @default(now())
  password   String

  purchases  Purchase[]
  userPoints UserPoints[]
}

/// İşletmeler
model Company {
  id         Int          @id @default(autoincrement())
  name       String
  email      String       @unique   // login için email
  password   String                 // login için şifre
  address    String?
  createdAt  DateTime     @default(now())

  categories Category[]
  products   Product[]
  purchases  Purchase[]
  userPoints UserPoints[]
}

/// Ürün kategorileri
model Category {
  id        Int      @id @default(autoincrement())
  name      String

  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId Int

  products  Product[]
}

/// Ürünler
model Product {
  id           Int       @id @default(autoincrement())
  name         String
  price        Float
  pointsToBuy  Int       @default(0)
  pointsOnSell Int       @default(0)
  createdAt    DateTime  @default(now())

  company      Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId    Int

  category     Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId   Int?

  purchases    Purchase[]
}

/// Satın almalar
model Purchase {
  id           Int      @id @default(autoincrement())
  quantity     Int      @default(1)
  totalPrice   Float
  pointsEarned Int      @default(0)
  purchaseDate DateTime @default(now())

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String

  company   Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId Int

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

/// Müşteri puanları
model UserPoints {
  id          Int     @id @default(autoincrement())
  totalPoints Int     @default(0)

  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String

  company     Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId   Int

  @@unique([userId, companyId]) // her müşteri + şirket için tek kayıt
}
